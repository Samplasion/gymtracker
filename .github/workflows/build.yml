name: CI Builds

on:
  release:
    types:
      - created
  workflow_dispatch: {}
  push:
    branches:
      - '**'

jobs:
  build_ios:
    name: Build iOS app
    continue-on-error: true
    runs-on: macos-15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.1"
          channel: "stable"
          cache: true
      # - uses: maxim-lobanov/setup-xcode@v1
      #   with:
      #     xcode-version: latest-stable
      - name: Install dependencies
        run: flutter pub get
      - name: Install Homebrew
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
      - name: Install bash 5
        run: brew install bash
      - name: Export brew path
        run: echo "/usr/local/bin" >> $GITHUB_PATH
      - name: Build env
        env:
          DOTENV: ${{ secrets.DOTENV }}
        run: |
          echo $DOTENV > .env
          set -a; source .env; set +a
          dart run build_runner clean && dart run build_runner build --delete-conflicting-outputs
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      # - name: Install iOS platform
      #   run: sudo xcodebuild -downloadPlatform iOS
      - name: Build
        run: |
          tools/build_ios.sh
      - name: Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: out/ios/GymBro-*
          generate_release_notes: true
      - name: Upload artifacts
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: Gym Bro iOS app
          path: out/ios/GymBro-*
  build_android:
    name: Build Android app [${{ matrix.flag }}]
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # a = apk, b = bundle
        # flag: [a, b]
        # Temporarily disable bundle build
        flag: [a]
    env:
      SEGMENT_DOWNLOAD_TIMEOUT_MINS: '5'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.1"
          channel: "stable"
          cache: true
      - run: |
          echo CACHE-PATH=${{ steps.flutter-action.outputs.CACHE-PATH }}
          echo CACHE-KEY=${{ steps.flutter-action.outputs.CACHE-KEY }}
          echo CHANNEL=${{ steps.flutter-action.outputs.CHANNEL }}
          echo VERSION=${{ steps.flutter-action.outputs.VERSION }}
          echo ARCHITECTURE=${{ steps.flutter-action.outputs.ARCHITECTURE }}
          echo PUB-CACHE-PATH=${{ steps.flutter-action.outputs.PUB-CACHE-PATH }}
          echo PUB-CACHE-KEY=${{ steps.flutter-action.outputs.PUB-CACHE-KEY }}
        shell: bash
      - name: Clean project
        run: flutter clean
      - name: Install dependencies
        run: flutter pub get
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE }}
        run: |
          TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore.jks
          echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"
          echo "TMP_KEYSTORE_FILE_PATH=${TMP_KEYSTORE_FILE_PATH}" >> $GITHUB_ENV
      - name: Generate key.properties
        run: |
          echo 'storePassword=${{ secrets.SECRET_STORE_PASSWORD }}' >> key.properties
          echo 'keyPassword=${{ secrets.SECRET_KEY_PASSWORD }}' >> key.properties
          echo 'keyAlias=${{ secrets.SECRET_KEY_ALIAS }}' >> key.properties
          echo 'storeFile=${{ env.TMP_KEYSTORE_FILE_PATH }}' >> key.properties
          mv key.properties android/

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build env
        env:
          DOTENV: ${{ secrets.DOTENV }}
        run: |
          echo $DOTENV > .env
          set -a; source .env; set +a
          dart run build_runner clean && dart run build_runner build --delete-conflicting-outputs
      - name: Build
        run: tools/build_android.sh -${{ matrix.flag }}
      - name: Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: out/android/GymBro-*
          generate_release_notes: true
      - name: Upload artifacts
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: Gym Bro Android app [${{ matrix.flag }}]
          path: out/android/GymBro-*
